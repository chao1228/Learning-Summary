重要的 C++流类和流对象
	cout 			标准输出流，通常被重定向到控制台
	cin 			标准输入流，通常用于将数据读入变量
	cerr 			用于显示错误信息的标准输出流
	fstream 		用于操作文件的输入和输出流，继承了 ofstream 和 ifstream 
	ofstream 		用于操作文件的输出流类，即用于创建文件
	ifstream 		用于操作文件的输入流类，即用于读取文件

	stringstream 	用于操作字符串的输入和输出流类，继承了 istringstream 和 ostringstream，
					通常用于在字符串和其他类型之间进行转换

使用流类时，可指定为您执行特定操作的控制符（manipulator）。std::endl 就是一个这样的控制符，
您一直在使用它来插入换行符

	输出控制符
	endl 插入一个换行符
	ends 插入一个空字符

	基数控制符
	dec 让流以十进制方式解释输入或显示输出
	hex 让流以十六进制方式解释输入或显示输出
	oct 让流以八进制方式解释输入或显示输出

	浮点数表示控制符
	fixed 让流以定点表示法显示数据
	scientific 让流以科学表示法显示数据

	<iomanip>控制符
	setprecision 设置小数精度
	setw 设置字段宽度
	setfill 设置填充字符
	setbase 设置基数，与使用 dec、hex 或 oct 等效
	setiosflag 通过类型为 std::ios_base::fmtflags 的掩码输入参数设置标
	resetiosflag 将 std::ios_base::fmtflags 参数指定的标志重置为默任值

使用 std::cin:get 将输入读取到 char*缓冲区中
	char charBuf[10] = {0}; 
	cin.get(charBuf, 9); 
使用 std::cin 将输入读取到 std::string 中
	string name; 
	cin >> name; 

	string name; 
	getline(cin, name); 


使用 std::fstream 处理文件
使用 open( )和 close( )打开和关闭文件
	fstream myFile; 
	myFile.open("HelloFile.txt",ios_base::in|ios_base::out|ios_base::trunc); 
	if (myFile.is_open()) // check if open() succeeded 
	{ 
	 // do reading or writing here 
	 myFile.close(); 
	} 
	open( )接受两个参数：第一个是要打开的文件的路径和名称（如果没有提供路径，将假定为应用
	程序的当前目录设置）；第二个是文件的打开模式。在上述代码中，指定了模式 ios_base::trunc（即便
	指定的文件存在，也重新创建它）、ios_base::in（可读取文件）和 ios_base::out（可写入文件）。
还有另一种打开文件流的方式，那就是使用构造函数：
	fstream myFile("HelloFile.txt",ios_base::in|ios_base::out|ios_base::trunc); 
	
可在下述各种模式下打开文件流。
	• ios_base::app：附加到现有文件末尾，而不是覆盖它。
	• ios_base::ate：切换到文件末尾，但可在文件的任何地方写入数据。
	• ios_base::trunc：导致现有文件被覆盖，这是默认设置。
	• ios_base::binary：创建二进制文件（默认为文本文件）。
	• ios_base::in：以只读方式打开文件。
	• iosbase::out：以只写方式打开文

使用 open( )创建文本文件并使用运算符<<写入文本
使用 open( )和运算符>>读取文本文件

读写二进制文件
在打开文件时使用 ios_base::binary标志。通常使用 ofstream::write 和 ifstream::read 来读写二进制文件

使用 std::stringstream 在整型和字符串之间进行转换
 
只想读取文件时，务必使用 ifstream。
只想写入文件时，务必使用 ofstream。
插入文件流或从文件流中提取之前，务必使用is_open( )核实是否成功地打开了它。
使用完文件流后，别忘了使用方法 close( )将其关闭。
别忘了，使用代码 cin>>strData;从 cin 提取内容
到 string 中时，通常导致 strData 只包含空白前的文本，而不是整行。
别忘了，函数 getline(cin, strData);从输入流中获取整行，其中包括空白。