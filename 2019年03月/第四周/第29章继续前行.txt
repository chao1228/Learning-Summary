C++通过类 std::mutex 提供了一种互斥量实现,这个类位于头文件<mutex>中。
通过使用信号量,可指定多少个线程可同时执行某个代码段。只允许一个线程访问的信号量被称为二值信号量(binary 
semaphore)。



C++11的新特性
    支持在 if 和 switch 中进行初始化


编写杰出的 C++代码

    • 对于 int、float 等变量,务必进行初始化。
    • 务必将指针初始化为 NULL 或有效的地址—如运算符 new 返回的地址。
    • 不要使用字符串缓冲区(char*),也不要使用 strelen( )和 strcopy( 
)等函数。std::string 
更安全,还提供了很多有用的方法,如获取长度、进行复制和附加的方法。
    • 仅当确定要包含的元素数时才使用静态数组。如果不确定,应使用 std::vector 
等动态数组。
    • 声明和定义接受非 POD 
类型作为输入的函数时,应考虑将参数声明为引用,以免调用函数时执行不必要的复制步骤。
    
•如果类包含原始指针成员,务必考虑如何在复制或赋值时管理内存资源所有权,即应考虑编写复制构造函数和赋值运算符。
    
•编写管理动态数组的实用类时,务必实现移动构造函数和移动赋值运算符,以改善性能。
    •务必正确地使用 const。理想情况下, get( 
)函数不应修改类成员,因此应将其声明为 const 
函数。同样,除非要修改函数参数包含的值,否则应将其声明为 const 引用。
    •绝不要在析构函数中引发异常。
